name: Build and Deploy

on:
  push:
    branches:
      - main
    tags:
      - release/major
      - release/minor
      - release/patch

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_VERSION: 2020.1.15f1
  PROJECT_PATH: Test

jobs:
  bump-semver:
    name: Bump Semantic Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump-semver.outputs.new_version }}
      title: ${{ steps.get-merged-pull-request.outputs.title }}
      number: ${{ steps.get-merged-pull-request.outputs.number }}
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2.3.4

      - name: Get Merged Pull Request
        uses: actions-ecosystem/action-get-merged-pull-request@v1.0.1
        id: get-merged-pull-request
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Pull Request Release Label
        uses: actions-ecosystem/action-release-label@v1.2.0
        id: release-label
        if: ${{ steps.get-merged-pull-request.outputs.title != null }}
        with:
          labels: ${{ steps.get-merged-pull-request.outputs.labels }}

      - name: Get Latest Tag
        uses: actions-ecosystem/action-get-latest-tag@v1.1.0
        id: get-latest-tag
        if: ${{ steps.release-label.outputs.level != null }}
        with:
          semver_only: true

      - name: Bump Semver
        uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        if: ${{ steps.release-label.outputs.level != null }}
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: ${{ steps.release-label.outputs.level }}
  
  check-license:
    name: Check for Unity License
    runs-on: ubuntu-latest
    outputs:
      is_unity_license_set: ${{ steps.check-license.outputs.is_unity_license_set }}
    steps: 
      - name: Check whether Unity Activation requests should be done
        id: check-license
        run: |
          echo "Skip activation job: ${{ env.UNITY_LICENSE != '' }}"
          echo "::set-output name=is_unity_license_set::${{ env.UNITY_LICENSE != '' }}"

  build:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    needs: [check-license, bump-semver]
    if: ${{ needs.check-license.outputs.is_unity_license_set == 'true' }}
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX
          - StandaloneWindows
          - StandaloneWindows64
          - StandaloneLinux64
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2.3.4
        with:
          lfs: true
          
      - name: Cache files 
        uses: actions/cache@v2.1.6
        with:
          path: ${{ env.PROJECT_PATH }}/Library
          key: Library-${{ env.PROJECT_PATH }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ env.PROJECT_PATH }}-
            Library-
      
      - name: Build
        uses: game-ci/unity-builder@v2.0-alpha-13
        with:
          buildName: Example Project
          projectPath: ${{ env.PROJECT_PATH }}
          unityVersion: ${{ env.UNITY_VERSION }}
          targetPlatform: ${{ matrix.targetPlatform }}
          versioning: Custom
          version: ${{ needs.bump-semver.outputs.version }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2.2.3
        with:
          name: Build
          path: build
    
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build, bump-semver]
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2.3.4

      - name: Push New Tag
        uses: actions-ecosystem/action-push-tag@v1.0.0
        if: ${{ needs.bump-semver.outputs.version != null }}
        with:
          tag: ${{ needs.bump-semver.outputs.version }}
          message: "${{ needs.bump-semver.outputs.version }}: PR #${{ needs.bump-semver.outputs.number }} ${{ needs.bump-semver.outputs.title }}"

      - name: Create Changelog
        id: changelog
        uses: loopwerk/tag-changelog@v1.0.4
        if: ${{ needs.bump-semver.outputs.version != null }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          exclude_types: other,doc,chore
          config_file: .github/changelog-config.js
      
      - name: Download Artifacts
        uses: actions/download-artifact@v2.0.10
        with:
          name: Build
          path: build

      - name: Display structure of uploaded builds
        run: ls build

      - name: Zip artifacts
        run: |
          cd build
          for file in $(ls -I "*.zip"); do zip -r "${file}.zip" "$file"; done
    
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v0.1.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.bump-semver.outputs.version }}
          name: Release ${{ needs.bump-semver.outputs.version }}
          body: |
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
          files: build/*.zip
      
      - name: Create Comment about Release
        uses: actions-ecosystem/action-create-comment@v1.0.0
        if: ${{ needs.bump-semver.outputs.version != null }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ needs.bump-semver.outputs.number }}
          body: |
            The new version [${{ needs.bump-semver.outputs.version }}](https://github.com/${{ github.repository }}/releases/tag/${{ needs.bump-semver.outputs.version }}) has been released :tada:
