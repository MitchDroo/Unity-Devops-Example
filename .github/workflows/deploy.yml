name: Build and Deploy to GitHub

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize]
env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_VERSION: 2020.1.15f1
  PROJECT_PATH: Test

jobs:
  check-license:
    name: Check for Unity License
    runs-on: ubuntu-latest
    outputs:
      is_unity_license_set: ${{ steps.check-license.outputs.is_unity_license_set }}
    steps: 
      - name: Check whether Unity Activation requests should be done
        id: check-license
        run: |
          echo "Skip activation job: ${{ env.UNITY_LICENSE != '' }}"
          echo "::set-output name=is_unity_license_set::${{ env.UNITY_LICENSE != '' }}"

  build:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    needs: [check-license]
    if: ${{ needs.check-license.outputs.is_unity_license_set == 'true' }}
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX
          - StandaloneWindows
          - StandaloneWindows64
          - StandaloneLinux64
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3.0.2
        with:
          lfs: true
          
      - name: Cache files 
        uses: actions/cache@v3.0.4
        with:
          path: ${{ env.PROJECT_PATH }}/Library
          key: Library-${{ env.PROJECT_PATH }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ env.PROJECT_PATH }}-
            Library-
      
      - name: Build
        uses: game-ci/unity-builder@v2.0.4
        with:
          buildName: Example Project
          projectPath: ${{ env.PROJECT_PATH }}
          unityVersion: ${{ env.UNITY_VERSION }}
          targetPlatform: ${{ matrix.targetPlatform }}
          versioning: Custom
          version: ${{ needs.bump-semver.outputs.version }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3.1.0
        with:
          name: Build
          path: build
    
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      fail-fast: true
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3.0.2
      
      - name: Download Artifacts
        uses: actions/download-artifact@v3.0.0
        with:
          name: Build
          path: build

      - name: Display structure of uploaded builds
        run: ls build

      - name: Zip artifacts
        run: |
          cd build
          for file in $(ls -I "*.zip"); do zip -r "${file}.zip" "$file"; done
          
      - name: Create Draft Release
        id: create_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
           config-name: release-drafter.yml
           disable-autolabeler: false
    
      - name: Upload Builds to Release
        uses: Fhwang0926/upload-release-asset@v1.1.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: build/*.zip
      
      - name: Create Comment about Release
        uses: actions-ecosystem/action-create-comment@v1.0.2
        if: ${{ needs.bump-semver.outputs.version != null }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            The new version [${{ steps.create_release.outputs.tag_name }}](https://github.com/${{ github.repository }}/releases/tag/${{ steps.create_release.outputs.tag_name }}) has been released :tada:
