name: Integrate
 
on:
  pull_request:
    branches: [ main ]

env:
 UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
 UNITY_VERSION: 2020.1.15f1
 PROJECT_PATH: Test

jobs:
  test:
    name: Run EditMode and PlayMode Tests ‚ú®
    runs-on: ubuntu-latest
    strategy:
     fail-fast: false
    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v2.3.4
      
      # Cache Library Files
      - name: Cache
        uses: actions/cache@v2.1.6
        with:
         path: ${{ env.projectPath }}/Library
         key: Library-${{ env.projectPath }}
         restore-keys: |
          Library-
      
      # Run Tests
      - name: Run All Tests
        uses: game-ci/unity-test-runner@v2.0-alpha-6
        id: tests
        with:
         unityVersion: ${{ env.UNITY_VERSION }}
         projectPath: ${{ env.PROJECT_PATH }}
         testMode: all
         customParameters: -nographics -debugCodeOptimization -enableCodeCoverage -coverageResultsPath ./coverage-results -coverageOptions generateAdditionalMetrics
         githubToken: ${{ secrets.GITHUB_TOKEN }}
         checkName: Test Results (All)
      
      # Upload Results
      - name: Upload Results
        uses: actions/upload-artifact@v2.2.4
        if: always()
        with:
         name: Test Results (All)
         path: ${{ steps.tests.outputs.artifactsPath }}
      
      - name: Upload Codecov Report
        uses: codecov/codecov-action@v2
        with:
          name: Test Coverage (All)
          flags: automated
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ env.PROJECT_PATH }}/coverage-results/**/*.xml
 
  linter:
    name: Lint code base üñ•Ô∏è
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - name: Checkout Code
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      # Perform Linting
      - name: Perform Linting
        uses: github/super-linter@v4.7.3
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_CSHARP: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
